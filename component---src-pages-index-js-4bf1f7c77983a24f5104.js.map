{"version":3,"sources":["webpack:///./src/components/posts-listing-with-flags.js","webpack:///./src/components/style/emo-home-posts.js","webpack:///./src/pages/index.js"],"names":["PostsListingWithFlags","data","allMarkdownRemark","edges","map","node","key","id","to","fields","slug","Math","abs","round","Date","frontmatter","update","getTime","days","date","fluid","featuredImage","childImageSharp","category","title","subtitle","excerpt","Card","styled","CardColumns","mwS","small","css","medium","large","xLarge","SinglePost","PostInfo","props","PreTitle","fontWeight","display","padding","textTransform","Freshnew","position","zIndex","background","right","Update","Title","paddingBottom","Subtitle","color","paddingLeft","Excerpt","paddingTop","a","query"],"mappings":"6FAAA,kFA2FeA,IAtEe,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAC5B,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACKA,EAAKC,kBAAkBC,MAAMC,KAAI,gBAAEC,EAAF,EAAEA,KAAF,OAC9B,kBAAC,IAAD,CAAMC,IAAKD,EAAKE,IACZ,kBAAC,OAAD,CAAMC,GAAIH,EAAKI,OAAOC,MAClB,kBAAC,IAAD,KACKC,KAAKC,IAAID,KAAKE,OAAO,IAAIC,KAAKT,EAAKU,YAAYC,QAAQC,WAAY,IAAIH,MAAOG,WAVlGC,UAU2H,GACpGb,EAAKU,YAAYC,SAAWX,EAAKU,YAAYI,MACzC,kBAAC,IAAD,eAEPR,KAAKC,IAAID,KAAKE,OAAO,IAAIC,KAAKT,EAAKU,YAAYC,QAAQC,WAAY,IAAIH,MAAOG,WAdlGC,UAc2H,GACpGb,EAAKU,YAAYC,SAAWX,EAAKU,YAAYI,MACzC,kBAAC,IAAD,kBAER,kBAAC,IAAD,CACIC,MAAOf,EAAKU,YAAYM,cAAcC,gBAAgBF,QAE1D,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAWf,EAAKU,YAAYQ,UAC5B,kBAAC,IAAD,KAAQlB,EAAKU,YAAYS,OACzB,kBAAC,IAAD,KAAWnB,EAAKU,YAAYU,UAC5B,kBAAC,IAAD,KAAUpB,EAAKqB,oB,kCC5CnD,gXAGaC,EAAOC,YAAH,2BAAGA,CAAH,2KAaJC,EAAcD,YAAH,2BAAGA,CAAH,+FAMpBE,IAAIC,MAAMC,YAAV,eANoB,IASpBF,IAAIG,OAAOD,YAAX,yCAToB,IAYpBF,IAAII,MAAMF,YAAV,yCAZoB,IAepBF,IAAIK,OAAOH,YAAX,yCAfoB,KAoBXI,EAAaR,YAAH,2BAAGA,CAAH,iFAKnBD,EALmB,qFAWnBG,IAAIC,MAAMC,YAAV,eAXmB,KAoBVK,EAAWT,YAAH,2BAAGA,EAAW,SAAAU,GAAK,MAAK,MAEhCC,EAAWX,YAAH,0BAAGA,EAAU,SAAAU,GAAK,MAAK,CAC1CE,WAAY,MACZC,QAAS,QACTC,QAAS,OACTC,cAAe,gBAGJC,EAAWhB,YAAH,4BAAGA,EAAY,SAAAU,GAAK,MAAK,CAC5CO,SAAU,WACVC,OAAQ,EACRJ,QAAS,OACTK,WAAY,UACZC,MAAO,MAEIC,EAASrB,YAAH,4BAAGA,EAAY,SAAAU,GAAK,MAAK,CAC3CO,SAAU,WACVC,OAAQ,EACRJ,QAAS,OACTK,WAAY,UACZC,MAAO,MAGKE,EAAQtB,YAAH,0BAAGA,EAAU,SAAAU,GAAK,MAAK,CACvCE,WAAY,MACZC,QAAS,QACTC,QAAS,OACVS,cAAe,MAGHC,EAAWxB,YAAH,0BAAGA,EAAU,SAAAU,GAAK,MAAK,CAC3CE,WAAY,MACZC,QAAS,QACTY,MAAO,QACPC,YAAa,OACbH,cAAe,WAGHI,EAAU3B,YAAH,0BAAGA,EAAS,SAAAU,GAAK,MAAK,CACxCI,QAAS,OACTc,WAAY,EACZC,EAAG,CACDjB,WAAY,U,kCCnGhB,kFAIe,sBAAa,IAAXvC,EAAU,EAAVA,KACb,OAAO,kBAAC,IAAD,CAAuBA,KAAMA,KAGjC,IAAMyD,EAAK","file":"component---src-pages-index-js-4bf1f7c77983a24f5104.js","sourcesContent":["import React from \"react\";\nimport Layout from \"./layout\";\nimport {\n    Card,\n    CardColumns, Excerpt,\n    Freshnew,\n    PostInfo,\n    PreTitle,\n    SinglePost,\n    Subtitle,\n    Title,\n    Update\n} from \"./style/emo-home-posts\";\nimport {graphql, Link} from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nlet minutes = 1000 * 60;\nlet hours = minutes * 60;\nlet days = hours * 24;\nlet months = days * 30;\n\nconst PostsListingWithFlags = ({data}) => {\n    return (\n        <Layout>\n            <CardColumns>\n                {data.allMarkdownRemark.edges.map(({node}) => (\n                    <Card key={node.id}>\n                        <Link to={node.fields.slug}>\n                            <SinglePost>\n                                {Math.abs(Math.round((new Date(node.frontmatter.update).getTime() - new Date().getTime()) / months)) <= 1 &&\n                                    node.frontmatter.update !== node.frontmatter.date && (\n                                        <Update>Update</Update>\n                                    )}\n                                {Math.abs(Math.round((new Date(node.frontmatter.update).getTime() - new Date().getTime()) / months)) <= 1 &&\n                                    node.frontmatter.update === node.frontmatter.date && (\n                                        <Freshnew>Fresh New</Freshnew>\n                                    )}\n                                <Img\n                                    fluid={node.frontmatter.featuredImage.childImageSharp.fluid}\n                                />\n                                <PostInfo>\n                                    <PreTitle>{node.frontmatter.category}</PreTitle>\n                                    <Title>{node.frontmatter.title}</Title>\n                                    <Subtitle>{node.frontmatter.subtitle}</Subtitle>\n                                    <Excerpt>{node.excerpt}</Excerpt>\n                                </PostInfo>\n                            </SinglePost>\n                        </Link>\n                    </Card>\n                ))}\n            </CardColumns>\n        </Layout>\n    );\n};\n\nexport const otherPostsNodeFragment = graphql`\n    fragment otherPostsNodes on MarkdownRemarkEdge {\n      node {\n        id\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"DD MMMM, YYYY\")\n          update(formatString: \"DD MMMM, YYYY\")\n          title\n          subtitle\n          featuredImage {\n            childImageSharp {\n              fluid(maxWidth: 500, maxHeight: 250, cropFocus: CENTER) {\n                base64\n                tracedSVG\n                aspectRatio\n                src\n                srcSet\n                srcWebp\n                srcSetWebp\n                sizes\n                originalImg\n                originalName\n                presentationWidth\n                presentationHeight\n              }\n            }\n          }\n        }\n      }\n    }\n`;\n\nexport default PostsListingWithFlags;\n\n","import  styled , { css } from \"react-emotion\";\nimport  { mwS } from \"./breakpoints\";\n\nexport const Card = styled.div`\n    background: #fff;\n    margin-bottom: 20px;\n    transform: scale(1);\n    -o-transition: 0.5s all ease;\n    transition: 0.5s all ease;\n    opacity: 1;\n  &:hover {\n    background: #e6e6e6;\n    transform: scale(0.96);\n  }\n`;\n\nexport const CardColumns = styled.div`\n  -moz-column-gap: 1.25rem;\n  column-gap: 1.25rem;\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  \n  ${mwS.small(css`\n    opacity: 1;\n  `)};\n  ${mwS.medium(css`\n    grid-template-columns: repeat(2, 1fr);\n  `)};\n  ${mwS.large(css`\n    grid-template-columns: repeat(2, 1fr);\n  `)};\n  ${mwS.xLarge(css`\n    grid-template-columns: repeat(3, 1fr);\n  `)};\n`;\n\nexport const SinglePost = styled.div`\n  & .gatsby-image-wrapper {\n    -o-transition: 0.2s all ease;\n    transition: 0.2s all ease;\n  }\n  ${Card}:hover & .gatsby-image-wrapper {\n    opacity: 0.5;\n  }\n  & .gatsby-image-wrapper {\n    height: 250px;\n  }\n  ${mwS.small(css`\n    opacity: 1;\n  `)};\n`;\n\nexport const PostImage = styled.img(props => ({\n  width: \"100%\"\n}));\n\nexport const PostInfo = styled.div(props => ({}));\n\nexport const PreTitle = styled.h6(props => ({\n  fontWeight: \"500\",\n  display: \"block\",\n  padding: \"17px\",\n  textTransform: \"uppercase\"\n}));\n\nexport const Freshnew = styled.span(props => ({\n  position: \"absolute\",\n  zIndex: 1,\n  padding: \"15px\",\n  background: \"#a5d6a7\",\n  right: 0\n}));\nexport const Update = styled.span(props => ({\n\tposition: \"absolute\",\n\tzIndex: 1,\n\tpadding: \"15px\",\n\tbackground: \"#fdd835\",\n\tright: 0\n}));\n\nexport const Title = styled.h4(props => ({\n  fontWeight: \"500\",\n  display: \"block\",\n  padding: \"17px\",\n\tpaddingBottom: 0\n}));\n\nexport const Subtitle = styled.h5(props => ({\n\tfontWeight: \"200\",\n\tdisplay: \"block\",\n\tcolor: \"black\",\n\tpaddingLeft: \"17px\",\n\tpaddingBottom: \"17px\",\n}));\n\nexport const Excerpt = styled.p(props => ({\n  padding: \"17px\",\n  paddingTop: 0,\n  a: {\n    fontWeight: 700\n  }\n}));\n","import React from \"react\";\nimport {graphql} from \"gatsby\";\nimport PostsListingWithFlags from \"../components/posts-listing-with-flags\";\n\nexport default ({data}) => {\n    return <PostsListingWithFlags data={data} />\n};\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___update], order: DESC }\n      filter: { frontmatter: { category: { in: [\"Personal\", \"Academic\", \"Hackathon\", \"Employment\"] } } }\n    ) {\n      edges {\n        ...otherPostsNodes\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}