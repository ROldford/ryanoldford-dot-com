{"version":3,"sources":["webpack:///./src/components/style/emo-home-posts.js","webpack:///./src/pages/index.js"],"names":["Card","styled","CardColumns","mwS","small","css","medium","large","xLarge","SinglePost","PostInfo","props","PreTitle","fontWeight","display","padding","textTransform","Freshnew","position","zIndex","background","right","Update","Title","paddingBottom","Subtitle","color","paddingLeft","Excrept","paddingTop","a","data","allMarkdownRemark","edges","map","node","key","id","to","fields","slug","Math","abs","round","Date","frontmatter","update","getTime","days","date","fluid","featuredImage","childImageSharp","category","title","subtitle","excerpt","query"],"mappings":"2FAAA,gXAGaA,EAAOC,YAAH,2BAAGA,CAAH,2KAaJC,EAAcD,YAAH,2BAAGA,CAAH,+FAMpBE,IAAIC,MAAMC,YAAV,eANoB,IASpBF,IAAIG,OAAOD,YAAX,yCAToB,IAYpBF,IAAII,MAAMF,YAAV,yCAZoB,IAepBF,IAAIK,OAAOH,YAAX,yCAfoB,KAoBXI,EAAaR,YAAH,2BAAGA,CAAH,iFAKnBD,EALmB,qFAWnBG,IAAIC,MAAMC,YAAV,eAXmB,KAoBVK,EAAWT,YAAH,2BAAGA,EAAW,SAAAU,GAAK,MAAK,MAEhCC,EAAWX,YAAH,0BAAGA,EAAU,SAAAU,GAAK,MAAK,CAC1CE,WAAY,MACZC,QAAS,QACTC,QAAS,OACTC,cAAe,gBAGJC,EAAWhB,YAAH,4BAAGA,EAAY,SAAAU,GAAK,MAAK,CAC5CO,SAAU,WACVC,OAAQ,EACRJ,QAAS,OACTK,WAAY,UACZC,MAAO,MAEIC,EAASrB,YAAH,4BAAGA,EAAY,SAAAU,GAAK,MAAK,CAC3CO,SAAU,WACVC,OAAQ,EACRJ,QAAS,OACTK,WAAY,UACZC,MAAO,MAGKE,EAAQtB,YAAH,0BAAGA,EAAU,SAAAU,GAAK,MAAK,CACvCE,WAAY,MACZC,QAAS,QACTC,QAAS,OACVS,cAAe,MAGHC,EAAWxB,YAAH,0BAAGA,EAAU,SAAAU,GAAK,MAAK,CAC3CE,WAAY,MACZC,QAAS,QACTY,MAAO,QACPC,YAAa,OACbH,cAAe,WAGHI,EAAU3B,YAAH,0BAAGA,EAAS,SAAAU,GAAK,MAAK,CACxCI,QAAS,OACTc,WAAY,EACZC,EAAG,CACDjB,WAAY,U,kCCnGhB,+HAWe,sBAAe,IAAZkB,EAAW,EAAXA,KAChB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACGA,EAAKC,kBAAkBC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,kBAAC,IAAD,CAAMC,IAAKD,EAAKE,IACd,kBAAC,OAAD,CAAMC,GAAIH,EAAKI,OAAOC,MACpB,kBAAC,IAAD,KACEC,KAAKC,IAAID,KAAKE,OAAO,IAAIC,KAAKT,EAAKU,YAAYC,QAAQC,WAAY,IAAIH,MAAOG,WAVjFC,UAU0G,GACvGb,EAAKU,YAAYC,SAAWX,EAAKU,YAAYI,MAC3C,kBAAC,IAAD,eAEFR,KAAKC,IAAID,KAAKE,OAAO,IAAIC,KAAKT,EAAKU,YAAYC,QAAQC,WAAY,IAAIH,MAAOG,WAdjFC,UAc0G,GACxGb,EAAKU,YAAYC,SAAWX,EAAKU,YAAYI,MAC5C,kBAAC,IAAD,kBAEA,kBAAC,IAAD,CACEC,MAAOf,EAAKU,YAAYM,cAAcC,gBAAgBF,QAExD,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAWf,EAAKU,YAAYQ,UAC5B,kBAAC,IAAD,KAAQlB,EAAKU,YAAYS,OAC1B,kBAAC,IAAD,KAAWnB,EAAKU,YAAYU,UAC3B,kBAAC,IAAD,KAAUpB,EAAKqB,mBAW1B,IAAMC,EAAK","file":"component---src-pages-index-js-b136662ae0479060ae42.js","sourcesContent":["import  styled , { css } from \"react-emotion\";\nimport  { mwS } from \"./breakpoints\";\n\nexport const Card = styled.div`\n    background: #fff;\n    margin-bottom: 20px;\n    transform: scale(1);\n    -o-transition: 0.5s all ease;\n    transition: 0.5s all ease;\n    opacity: 1;\n  &:hover {\n    background: #e6e6e6;\n    transform: scale(0.96);\n  }\n`;\n\nexport const CardColumns = styled.div`\n  -moz-column-gap: 1.25rem;\n  column-gap: 1.25rem;\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  \n  ${mwS.small(css`\n    opacity: 1;\n  `)};\n  ${mwS.medium(css`\n    grid-template-columns: repeat(2, 1fr);\n  `)};\n  ${mwS.large(css`\n    grid-template-columns: repeat(2, 1fr);\n  `)};\n  ${mwS.xLarge(css`\n    grid-template-columns: repeat(3, 1fr);\n  `)};\n`;\n\nexport const SinglePost = styled.div`\n  & .gatsby-image-wrapper {\n    -o-transition: 0.2s all ease;\n    transition: 0.2s all ease;\n  }\n  ${Card}:hover & .gatsby-image-wrapper {\n    opacity: 0.5;\n  }\n  & .gatsby-image-wrapper {\n    height: 250px;\n  }\n  ${mwS.small(css`\n    opacity: 1;\n  `)};\n`;\n\nexport const PostImage = styled.img(props => ({\n  width: \"100%\"\n}));\n\nexport const PostInfo = styled.div(props => ({}));\n\nexport const PreTitle = styled.h6(props => ({\n  fontWeight: \"500\",\n  display: \"block\",\n  padding: \"17px\",\n  textTransform: \"uppercase\"\n}));\n\nexport const Freshnew = styled.span(props => ({\n  position: \"absolute\",\n  zIndex: 1,\n  padding: \"15px\",\n  background: \"#a5d6a7\",\n  right: 0\n}));\nexport const Update = styled.span(props => ({\n\tposition: \"absolute\",\n\tzIndex: 1,\n\tpadding: \"15px\",\n\tbackground: \"#fdd835\",\n\tright: 0\n}));\n\nexport const Title = styled.h4(props => ({\n  fontWeight: \"500\",\n  display: \"block\",\n  padding: \"17px\",\n\tpaddingBottom: 0\n}));\n\nexport const Subtitle = styled.h5(props => ({\n\tfontWeight: \"200\",\n\tdisplay: \"block\",\n\tcolor: \"black\",\n\tpaddingLeft: \"17px\",\n\tpaddingBottom: \"17px\",\n}));\n\nexport const Excrept = styled.p(props => ({\n  padding: \"17px\",\n  paddingTop: 0,\n  a: {\n    fontWeight: 700\n  }\n}));\n","import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport Img from \"gatsby-image\";\nimport { SinglePost, PostInfo, PreTitle, Title, Subtitle, Update, Freshnew, Excrept, Card, CardColumns }  from \"../components/style/emo-home-posts\";\n\nlet minutes = 1000 * 60;\nlet hours = minutes * 60;\nlet days = hours * 24;\nlet months = days * 30;\n\nexport default ({ data }) => {\n  return (\n    <Layout>\n      <CardColumns>\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <Card key={node.id}>\n            <Link to={node.fields.slug}>\n              <SinglePost>\n\t              {Math.abs(Math.round((new Date(node.frontmatter.update).getTime() - new Date().getTime()) / months)) <= 1 &&\n\t               node.frontmatter.update !== node.frontmatter.date &&(\n                  <Update>Update</Update>\n                )}\n\t              {Math.abs(Math.round((new Date(node.frontmatter.update).getTime() - new Date().getTime()) / months)) <= 1 &&\n\t              node.frontmatter.update === node.frontmatter.date &&(\n\t\t              <Freshnew>Fresh New</Freshnew>\n\t              )}\n                <Img\n                  fluid={node.frontmatter.featuredImage.childImageSharp.fluid}\n                />\n                <PostInfo>\n                  <PreTitle>{node.frontmatter.category}</PreTitle>\n                  <Title>{node.frontmatter.title}</Title>\n\t                <Subtitle>{node.frontmatter.subtitle}</Subtitle>\n                  <Excrept>{node.excerpt}</Excrept>\n                </PostInfo>\n              </SinglePost>\n            </Link>\n          </Card>\n        ))}\n      </CardColumns>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___update], order: DESC }\n      filter: { frontmatter: { category: { in: [\"Personal\", \"Academic\", \"Hackathon\"] } } }\n    ) {\n      edges {\n        node {\n          id\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            update(formatString: \"DD MMMM, YYYY\")\n            title\n            subtitle\n            featuredImage {\n              childImageSharp {\n                fluid(maxWidth: 500, maxHeight: 250, cropFocus: CENTER) {\n                  base64\n                  tracedSVG\n                  aspectRatio\n                  src\n                  srcSet\n                  srcWebp\n                  srcSetWebp\n                  sizes\n                  originalImg\n                  originalName\n                  presentationWidth\n                  presentationHeight\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}